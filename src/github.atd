type author = {
  name: string;
  email: string;
  ?username: string option;
}

type commit_hash = string

type commit = {
  id: commit_hash;
  distinct: bool;
  message: string;
  timestamp: string;
  url: string;
  author:  author;
  committer: author;
  added: string list;
  removed: string list;
  modified: string list;
}

type user = {
  login: string;
  id: int;
  html_url <ocaml name="url"> : string;
  avatar_url: string;
}

type repository = {
  name: string;
  html_url <ocaml name="url"> : string;
}

type commit_pushed_notification = {
 ref: string;
 after: commit_hash;
 commits: commit list;
 head_commit: commit;
 repository: repository;
 compare: string;
 pusher: author;
 sender: user;
}

type label = {
  name: string;
}

type pull_request = {
  id: int;
  body: string;
  title: string;
  url: string;
  labels: label list;
}

type pr_action = [
  Assigned <json name="assigned">
  | Unassigned <json name="unassigned">
  | Review_requested <json name="review_requested">
  | Review_request_removed <json name="review_request_removed">
  | Labeled <json name="labeled">
  | Unlabeled <json name="unlabeled">
  | Opened <json name="opened">
  | Edited <json name="edited">
  | Closed <json name="closed">
  | Ready_for_review <json name="ready_for_review">
  | Locked <json name="locked">
  | Unlocked <json name="unlocked">
  | Reopened <json name="reopened">
] <ocaml repr="classic">

type pr_notification = {
  action: pr_action;
  number: int;
  sender: user;
  pull_request: pull_request;
}

type branch = {
  name: string;
}

type ci_build_state = [
  Success <json name="success">
  | Failed <json name="failure">
  | Neutral <json name="neutral">
  | Cancelled <json name="cancelled">
  | Timed_out <json name="timed_out">
  | Action_required <json name="action_required">
  | Pending <json name="pending">
] <ocaml repr="classic">

type inner_commit = {
  author: author;
  committer: author;
  message: string;
}

type ci_commit = {
  sha: commit_hash;
  commit: inner_commit; 
  html_url <ocaml name="url"> : string;
  author: user;
}

type ci_build_notification = {
  commit: ci_commit;
  state: ci_build_state;
  target_url: string;
  description: string;
  context: string;
  branches: branch list;
}
