(* We keep this type an open enum because buildkite's documentation is not up to date and might have
   more states. It shouldn't be an issue because we don't care about all the possible states. *)
type build_state = [
  | Blocked <json name="blocked">
  | Canceled <json name="canceled">
  | Canceling <json name="canceling">
  | Failed <json name="failed">
  | Failing <json name="failing">
  | Finished <json name="finished">
  | Not_run <json name="not_run">
  | Passed <json name="passed">
  | Running <json name="running">
  | Scheduled <json name="scheduled">
  | Skipped <json name="skipped">
  | Other of string
] <json open_enum> <ocaml repr="classic">

type job = {
  name: string;
  state: build_state;
  web_url: string;
}

type non_job = {
  id: string;
}

type job_type = [
  | Script <json name="script"> of job
  | Trigger <json name="trigger"> of job
  | Manual <json name="manual"> of non_job
  | Waiter <json name="waiter"> of non_job
] <json adapter.ocaml="Atdgen_runtime.Json_adapter.Type_field"> <ocaml repr="classic">

type get_build_res = {
  state: build_state;
  created_at: string;
  finished_at: string nullable;
  jobs: job_type list;
  branch: string;
}

(* This is a custom type for the steps state and not a Buildkite type. We have it here
   to avoid circular dependencies with common.atd, common.ml and state.m  *)
type failed_step = {
  name: string;
  build_url: string;
}
