type status_rule <ocaml from="Rule"> = abstract
type prefix_rule <ocaml from="Rule"> = abstract
type label_rule <ocaml from="Rule"> = abstract
type 'v map_as_object <ocaml from="Common"> = abstract

(* This type of rule is used for CI build notifications. *)
type status_rules = {
  ?allowed_pipelines : string list nullable; (* keep only status events with a title matching this list *)
  rules: status_rule list;
}

(* This type of rule is used for events that must be routed based on the
  files they are related to. *)
type prefix_rules = {
  ?default_channel: string nullable; (* if none of the rules is matching *)
  rules: prefix_rule list;
}

(* This type of rule is used for PR and issue notifications. *)
type label_rules = {
  ?default_channel: string nullable; (* if none of the rules is matching *)
  rules: label_rule list;
}

(* This is the structure of the repository configuration file. It should be at the
   root of the monorepo, on the main branch. *)
type config = {
  prefix_rules : prefix_rules;
  label_rules : label_rules;
  status_rules : status_rules;
  ?main_branch_name : string nullable; (* the name of the main branch; used to filter out notifications about merges of main branch into other branches *)
}

(* This specifies the Slack webhook to query to post to the channel with the given name *)
type webhook = {
  url : string; (* webhook URL to post the Slack message *)
  channel : string; (* name of the Slack channel to post the message *)
}

type gh_repo_secrets = {
  (* GitHub personal access token, if repo access requires it *)
  ?gh_token : string nullable;
  (* GitHub webhook token to secure the webhook *)
  ?gh_hook_token : string nullable;
}

(* This is the structure of the secrets file which stores sensitive information, and
   shouldn't be checked into version control.  *)
type secrets = {
  (* repo-specific secrets; overrides global values if defined for a given repo *)
  ~repos <ocaml default="Common.StringMap.empty"> : gh_repo_secrets map_as_object;
  (* whitelist of repository URLs to handle notifications for *)
  ~allowed_repos <ocaml default="[]"> : string list;
  (* GitHub personal access token, if repo access requires it *)
  ?gh_token : string nullable;
  (* GitHub webhook token to secure the webhook *)
  ?gh_hook_token : string nullable;
  (* list of Slack webhook & channel name pairs *)
  ~slack_hooks <ocaml default="[]"> : webhook list;
  (* Slack bot token obtained via OAuth, enabling message posting to the workspace *)
  ?slack_access_token : string nullable;
 (* Slack uses this secret to sign requests; provide to verify incoming Slack requests *)
  ?slack_signing_secret : string nullable;
}
