type 'v map_as_object =
  (string * 'v) list <json repr="object">
    wrap <ocaml module="Common.StringMap" t="'v Common.StringMap.t">

type 'v int_map_as_object =
  (string * 'v) list <json repr="object">
    wrap <ocaml module="Common.IntMapJson" t="'v Common.IntMapJson.t">

type 'v table_as_object =
  (string * 'v) list <json repr="object">
    wrap <ocaml module="Common.Stringtbl" t="'v Common.Stringtbl.t">

type string_set =
  string list
    wrap <ocaml module="Common.StringSet">

type failed_step <ocaml from="Buildkite" t="failed_step"> = abstract

type failed_step_set =
  failed_step list
    wrap <ocaml module="Common.FailedStepSet" t="Common.FailedStepSet.t">
