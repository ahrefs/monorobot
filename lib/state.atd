type status_state <ocaml from="Github"> = abstract
type 'v map_as_object <ocaml from="Common"> = abstract
type 'v table_as_object <ocaml from="Common"> = abstract

(* A map from branch names to build statuses *)
type branch_statuses = status_state map_as_object

(* A map from pipeline names to [branch_statuses] maps. This tracks the
   last build state matched by the status_rules for each pipeline and
   branch *)
type pipeline_statuses = branch_statuses map_as_object

type ts_map = string map_as_object
type issue_state = {
  comments <ocaml mutable>: ts_map;
  reviews <ocaml mutable>: ts_map;
}

(* The runtime state of a given GitHub repository
   NB: issue number is the same as PR number for github APIs
*)
type repo_state = {
  pipeline_statuses <ocaml mutable>: pipeline_statuses;
  issue_tbl <ocaml mutable>: issue_state table_as_object;
}

(* The serializable runtime state of the bot *)
type state = {
  repos : repo_state table_as_object;
  ?bot_user_id <ocaml mutable>: string nullable;
}
